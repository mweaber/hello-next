{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Desktop\\\\Projects\\\\hello-next\\\\pages\\\\index.js\";\nimport React from \"react\";\n// ============== Intro Example ========================\n// This is the Link API\n// import Link from 'next/link';\n// import Layout from \"../comps/MyLayout.js\";\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <p>Hello Next.js</p>\n//         </Layout>\n//     );\n// }\n// ================ Method 1 for Layouts ===================\n// HOC Example index \n// import withLayout from '../comps/MyLayout2';\n// const Page = () => <p>Hello Next.js</p>;\n// export default withLayout(Page);\n// ================ Method 2 for Layouts ==================\n// Content as props example\n// import Layout from '../comps/MyLayout3.js';\n// const indexPageContent = <p>Hello Next.js</p>;\n// export default function Index() {\n//   return <Layout content={indexPageContent} />;\n// }\n// ================ Creating Dynamic Pages Example 1 =================\n// import Layout from \"../components/MyLayout\";\n// import Link from 'next/link';\n// const PostLink = props => (\n//     <li>\n//       <Link href={`/post?title=${props.title}`}>\n//         <a>{props.title}</a>\n//       </Link>\n//     </li>\n//   );\n//   export default function Blog() {\n//     return (\n//       <Layout>\n//         <h1>My Blog</h1>\n//         <ul>\n//           <PostLink title=\"Hello Next.js\" />\n//           <PostLink title=\"Learn Next.js is awesome\" />\n//           <PostLink title=\"Deploy apps with Zeit\" />\n//         </ul>\n//       </Layout>\n//     );\n//   }\n// ========== Creating Dynamic Routing ==============\n// import Layout from '../components/MyLayout.js';\n// import Link from 'next/link';\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"learn-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// ========== Data Fetching and API ==========\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Batman TV Shows\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Matt\\Desktop\\Projects\\hello-next\\pages\\index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEI;AAEA;AAEA;AAEJ;AAEA;AAEI;AAEA;AAEA;AACA;AACA;AAEJ;AAEI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADiB;AAAA,CAAnB;;AAeAN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJR,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBS,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJsB,2CAMf;AACLX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeJ,KAAf","sourcesContent":["// ============== Intro Example ========================\r\n// This is the Link API\r\n// import Link from 'next/link';\r\n// import Layout from \"../comps/MyLayout.js\";\r\n\r\n// export default function Index() {\r\n//     return (\r\n//         <Layout>\r\n//             <p>Hello Next.js</p>\r\n//         </Layout>\r\n//     );\r\n// }\r\n\r\n// ================ Method 1 for Layouts ===================\r\n// HOC Example index \r\n\r\n    // import withLayout from '../comps/MyLayout2';\r\n\r\n    // const Page = () => <p>Hello Next.js</p>;\r\n\r\n    // export default withLayout(Page);\r\n\r\n// ================ Method 2 for Layouts ==================\r\n\r\n// Content as props example\r\n\r\n    // import Layout from '../comps/MyLayout3.js';\r\n\r\n    // const indexPageContent = <p>Hello Next.js</p>;\r\n\r\n    // export default function Index() {\r\n    //   return <Layout content={indexPageContent} />;\r\n    // }\r\n\r\n// ================ Creating Dynamic Pages Example 1 =================\r\n\r\n    // import Layout from \"../components/MyLayout\";\r\n    // import Link from 'next/link';\r\n\r\n    // const PostLink = props => (\r\n    //     <li>\r\n    //       <Link href={`/post?title=${props.title}`}>\r\n    //         <a>{props.title}</a>\r\n    //       </Link>\r\n    //     </li>\r\n    //   );\r\n    //   export default function Blog() {\r\n    //     return (\r\n    //       <Layout>\r\n    //         <h1>My Blog</h1>\r\n    //         <ul>\r\n    //           <PostLink title=\"Hello Next.js\" />\r\n    //           <PostLink title=\"Learn Next.js is awesome\" />\r\n    //           <PostLink title=\"Deploy apps with Zeit\" />\r\n    //         </ul>\r\n    //       </Layout>\r\n    //     );\r\n    //   }\r\n\r\n// ========== Creating Dynamic Routing ==============\r\n\r\n// import Layout from '../components/MyLayout.js';\r\n// import Link from 'next/link';\r\n\r\n// const PostLink = props => (\r\n//   <li>\r\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n//       <a>{props.id}</a>\r\n//     </Link>\r\n//   </li>\r\n// );\r\n\r\n// export default function Blog() {\r\n//   return (\r\n//     <Layout>\r\n//       <h1>My Blog</h1>\r\n//       <ul>\r\n//         <PostLink id=\"hello-nextjs\" />\r\n//         <PostLink id=\"learn-nextjs\" />\r\n//         <PostLink id=\"deploy-nextjs\" />\r\n//       </ul>\r\n//     </Layout>\r\n//   );\r\n// }\r\n\r\n// ========== Data Fetching and API ==========\r\nimport Layout from '../components/MyLayout.js';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Index = props => (\r\n  <Layout>\r\n    <h1>Batman TV Shows</h1>\r\n    <ul>\r\n      {props.shows.map(show => (\r\n        <li key={show.id}>\r\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Index;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}